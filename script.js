ymaps.ready(init);

function init() {
    var myMap = new ymaps.Map("map", {
        center: [55.751578, 37.573856],
        zoom: 9,
        controls: []
    }, {
        suppressMapOpenBlock: true
    });

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–∞—Ä–∫–µ—Ä–æ–≤
    var placemarks = []; // –ú–µ—Ç–∫–∏
    var clickCoords, nearestCoords; // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    var currentRoute = null; // –ú–∞—Ä—à—Ä—É—Ç
    var locationPlacemark = null; // –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ

    //–ø–∞–Ω–µ–ª—å –º–∞—Ä—à—Ä—É—Ç–æ–≤
    var control = new ymaps.control.RoutePanel({
        options: {
            float: 'left',
            maxWidth: 220,
            fromEnabled: false,
            toEnabled: false,
            visible: false
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª –Ω–∞ –∫–∞—Ä—Ç—É
    myMap.controls.add(control);

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    var findLocation = new ymaps.control.Button({
        data: {
            content: "üö∂ –ù–∞–π—Ç–∏ –º–µ–Ω—è"
        },
        options: {
            maxWidth: 200
        }
    });

    // –ö–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    var updateYes = new ymaps.control.Button({
        data: {
            content: "–î–∞"
        },
        options: {
            maxWidth: 150
        }
    });
    //
    var updateNo = new ymaps.control.Button({
        data: {
            content: "–ù–µ—Ç"
        },
        options: {
            maxWidth: 150
        }
    });

    // –ö–Ω–æ–∫–∞ —Å–±—Ä–æ—Å–∞ –º–∞—Ä—à—Ä—É—Ç–∞
    var closeRoute = new ymaps.control.Button({
        data: {
            content: "–°–±—Ä–æ—Å–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç"
        },
        options: {
            maxWidth: 150,
            visible: false
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    myMap.controls.add(findLocation, {
        float: 'left',
        floatIndex: 100
    });

    myMap.controls.add(closeRoute, {
        float: 'left',
        floatIndex: 100
    });

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    function getCoords() {
        return new Promise(function (resolve, reject) {
            var geolocation = ymaps.geolocation;
            geolocation.get({
                provider: 'browser',
            }).then(function (result) {
                setCoords(result);
                resolve(locationPlacemark); // –†–∞–∑—Ä–µ—à–∞–µ–º Promise —Å –Ω–æ–≤–æ–π –º–µ—Ç–∫–æ–π
            }).catch(function (error) {
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º 'yandex'
                console.log("–ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ IP", error);
                geolocation.get({
                    provider: 'yandex',
                }).then(function (result) {
                    setCoords(result);
                    resolve(locationPlacemark);
                }).catch(function (error) {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ IP", error);
                    reject(error); // –û—Ç–∫–ª–æ–Ω—è–µ–º Promise —Å –æ—à–∏–±–∫–æ–π
                });
            });
        });
    };

    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    function setCoords(result) {
        // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –º–µ—Ç–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (locationPlacemark) {
            myMap.geoObjects.remove(locationPlacemark);
        }
        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–∫–∏
        var userCoords = result.geoObjects.get(0).geometry.getCoordinates();
        locationPlacemark = new ymaps.Placemark(userCoords, {
            iconContent: 'üö∂',
        }, {
            preset: 'islands#blueCircleIcon'
        });

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –º–µ—Ç–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—É –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
        myMap.geoObjects.add(locationPlacemark);
        myMap.setCenter(userCoords);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ localStorage
        localStorage.setItem('userCoords', JSON.stringify(userCoords));

        document.getElementById('routePlacemark').innerText = '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç';
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–∫–∏
    function addPlacemark(id, coords, header, hint, content) {
        //–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∫–∏
        var placemark = new ymaps.Placemark(coords, { balloonContentHeader: header, hintContent: hint, balloonContentBody: content }, { preset: "islands#redDotIconWithCaption" });

        // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–∫–∏.
        // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –Ω–∞ –º–µ—Ç–∫–µ.
        placemark.events.add('contextmenu', function (e) {
            e.stopPropagation();
            document.getElementById('contextMenu').style.display = 'none';
            // –ï—Å–ª–∏ –º–µ–Ω—é –º–µ—Ç–∫–∏ —É–∂–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ, —Ç–æ —É–±–∏—Ä–∞–µ–º –µ–≥–æ.
            if ($(`#menu-${id}`).css('display') == 'block') {
                $(`#menu-${id}`).remove();
            } else {
                // HTML-—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é.
                var menuContent =
                    `<div class="menu" id="menu-${id}">\
                        <div>
                            <b>–°–≤–æ–π—Å—Ç–≤–∞ –º–µ—Ç–∫–∏:</b>
                            <span class="menu-close" style="cursor:pointer; text-align:right; padding: 5px;">&#10006;</span><hr/>\
                        </div>\
                        <div id="menu_list">\
                            <div>–ó–∞–≥–æ–ª–æ–≤–æ–∫: <br /> <input type="text" name="header_text" /></div>\
                            <div>–ü–æ–¥—Å–∫–∞–∑–∫–∞: <br /> <input type="text" name="hint_text" /></div>\
                            <div>–û–ø–∏—Å–∞–Ω–∏–µ: <br /> <input type="text" name="balloon_text" /></div>\
                        </div>\
                        <div align="center"><hr/><input type="submit" value="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" /></div>\
                    </div>`;

                // –†–∞–∑–º–µ—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                $('body').append(menuContent);

                // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
                $(`#menu-${id} .menu-close`).click(function () {
                    $(`#menu-${id}`).remove();
                });
                // –ó–∞–¥–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –º–µ–Ω—é.
                $(`#menu-${id}`).css({
                    left: e.get('pagePixels')[0],
                    top: e.get('pagePixels')[1]

                });
                console.log(e.get('pagePixels'));
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Å–≤–æ–π—Å—Ç–≤ –º–µ—Ç–∫–∏.
                $(`#menu-${id} input[name="header_text"]`).val(placemark.properties.get('balloonContentHeader'));
                $(`#menu-${id} input[name="hint_text"]`).val(placemark.properties.get('hintContent'));
                $(`#menu-${id} input[name="balloon_text"]`).val(placemark.properties.get('balloonContentBody'));

                // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –∏–∑–º–µ–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –º–µ—Ç–∫–∏
                // –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é.
                $(`#menu-${id} input[type="submit"]`).click(function () {
                    // –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                    var headerText = $('input[name="header_text"]').val();
                    var hintText = $('input[name="hint_text"]').val();
                    var balloonText = $('input[name="balloon_text"]').val();
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –º–µ—Ç–∫–∏
                    placemark.properties.set({
                        balloonContentHeader: headerText,
                        hintContent: hintText,
                        balloonContentBody: balloonText
                    });

                    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –º–µ—Ç–∫–∏ –≤ –º–∞—Å—Å–∏–≤–µ placemarks –ø–æ id
                    var index = placemarks.findIndex(function (element) {
                        return element[0] === id;
                    });

                    // –ï—Å–ª–∏ –º–µ—Ç–∫–∞ –Ω–∞–π–¥–µ–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤–µ
                    if (index !== -1) {
                        placemarks[index] = [id, placemarks[index][1], headerText, hintText, balloonText];
                    }

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ localStorage
                    localStorage.setItem('placemarks', JSON.stringify(placemarks));

                    // –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é.
                    $(`#menu-${id}`).remove();
                });
            }
        });
        myMap.geoObjects.add(placemark);
    };

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–π –º–µ—Ç–∫–∏ –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –Ω–∞–∂–∞—Ç–∏—è
    function findNearestPlacemarkIndex(clickCoords) {
        let nearestDistance = Infinity;
        let nearestPlacemarkIndex = -1;

        placemarks.forEach((placemark, index) => {

            const coords = placemark[1];
            const distance = ymaps.coordSystem.geo.getDistance(clickCoords, coords);
            if (distance < nearestDistance) {
                nearestDistance = distance;
                nearestPlacemarkIndex = index;
            }
        });

        return nearestPlacemarkIndex;
    };

    // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ç–∫–∏
    function removePlacemarkByIndex(index) {
        if (index !== -1) {
            const nearestCoords = placemarks[index][1];

            //–ï—Å–ª–∏ –∫ –º–µ—Ç–∫–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω –º–∞—Ä—à—Ä—É—Ç —É–¥–∞–ª—è–µ–º –µ–≥–æ
            myMap.geoObjects.each(function (geoObject) {
                if (geoObject.geometry && geoObject.geometry.getType() === 'Point') {
                    const coords = geoObject.geometry.getCoordinates();
                    if (coords[0] === nearestCoords[0] && coords[1] === nearestCoords[1]) {
                        myMap.geoObjects.remove(geoObject);
                        console.log("–ë–ª–∏–∂–∞–π—à–∞—è –º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞ —Å –∫–∞—Ä—Ç—ã.");
                    }
                }
            });
            // –£–¥–∞–ª—è–µ–º –º–µ—Ç–∫—É
            placemarks.splice(index, 1);
            localStorage.setItem('placemarks', JSON.stringify(placemarks));
            console.log("–ú–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ placemarks.");
        } else {
            console.log("–ò–Ω–¥–µ–∫—Å –º–µ—Ç–∫–∏ –Ω–µ–≤–µ—Ä–µ–Ω.");
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
    function buildRoute(locationPlacemark, clickCoords) {
        closeRoute.options.set({
            visible: true
        });

        // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –±–ª–∏–∂–∞–π—à–µ–π –º–µ—Ç–∫–∏ –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –∫–ª–∏–∫–∞
        let nearestPlacemarkIndex = findNearestPlacemarkIndex(clickCoords);
        if (nearestPlacemarkIndex === -1) {
            console.log("–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–ª–∏–∂–∞–π—à–µ–π –º–µ—Ç–∫–∏
        let nearestCoords = placemarks[nearestPlacemarkIndex][1];

        localStorage.setItem('routeEndPoint', JSON.stringify(nearestCoords));

        // –ï—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–∞—Ä—à—Ä—É—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        if (currentRoute) {
            myMap.geoObjects.remove(currentRoute);
        }

        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–∞—Ä—à—Ä—É—Ç–∞
        let startCoords = locationPlacemark.geometry.getCoordinates();

        // –ó–∞–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç
        //control.routePanel.geolocate('from');
        control.routePanel.state.set({
            type: "auto",
            fromEnabled: false,
            toEnabled: false,
            from: startCoords.join(', '),
            to: nearestCoords.join(', ')
        });

        // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
        control.routePanel.getRouteAsync().then(function (route) {
            control.options.set({
                visible: true
            });
            currentRoute = route;
            myMap.geoObjects.add(route); // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –Ω–∞ –∫–∞—Ä—Ç—É
        });
    };

    function displayWeather(data) {
        // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ
        cond = {
            'clear': '—è—Å–Ω–æ',
            'partly-cloudy': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',
            'cloudy': '–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏',
            'overcast': '–ø–∞—Å–º—É—Ä–Ω–æ',
            'light-rain': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
            'rain': '–¥–æ–∂–¥—å',
            'heavy-rain': '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
            'showers': '–ª–∏–≤–µ–Ω—å',
            'wet-snow': '–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º',
            'light-snow': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥',
            'snow': '—Å–Ω–µ–≥',
            'snow-showers': '—Å–Ω–µ–≥–æ–ø–∞–¥',
            'hail': '–≥—Ä–∞–¥',
            'thunderstorm': '–≥—Ä–æ–∑–∞',
            'thunderstorm-with-rain': '–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π',
            'thunderstorm-with-hail': '–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º'
        };

        var placemark = new ymaps.Placemark(clickCoords, {
            // –ó–∞–¥–∞–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –±–∞–ª—É–Ω–∞.
            balloonContentHeader: '',
            // –ó–∞–¥–∞–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Å—Ç–∏ –±–∞–ª—É–Ω–∞.
            balloonContentBody: `
            <p class="wInfo">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${data.fact.temp}¬∞C</p>\
            <p class="wInfo">–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${data.fact.feels_like}¬∞C</p>\
            <p class="wInfo">${cond[data.fact.condition]}</p>\
            <p class="wInfo">–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${data.fact.wind_speed} –º/—Å</p>\
            <p class="wInfo">–î–∞–≤–ª–µ–Ω–∏–µ: ${data.fact.pressure_mm} –º–º —Ä—Ç. —Å—Ç.</p>\
            <p class="wInfo">–í–ª–∞–∂–Ω–æ—Å—Ç—å: ${data.fact.humidity}%</p>`
        });
        // –î–æ–±–∞–≤–∏–º –º–µ—Ç–∫—É –Ω–∞ –∫–∞—Ä—Ç—É.
        myMap.geoObjects.add(placemark);
        // –û—Ç–∫—Ä–æ–µ–º –±–∞–ª—É–Ω –Ω–∞ –º–µ—Ç–∫–µ.
        placemark.balloon.open();

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–ª—É–Ω–∞
        placemark.events.add('balloonclose', function () {
            // –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–∞–ª—É–Ω–∞ —É–¥–∞–ª—è–µ–º –º–µ—Ç–∫—É —Å –∫–∞—Ä—Ç—ã
            myMap.geoObjects.remove(placemark);
        });
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    findLocation.events.add('click', function () {
        findLocation.select();
        //—Å–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
        document.getElementById('contextMenu').style.display = 'none';
        if (localStorage.getItem('userCoords')) {

            findLocation.data.set('content', "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã?");
            findLocation.disable();
            myMap.controls.add(updateYes, {
                float: 'left',
                floatIndex: 99
            });
            myMap.controls.add(updateNo, {
                float: 'left',
                floatIndex: 98
            });
        }
        else {
            getCoords();
        }
    });

    findLocation.events.add('contextmenu', function (e) {
        e.preventDefault();
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
    updateYes.events.add('click', function () {
        updateYes.select();
        myMap.controls.remove(updateYes);
        myMap.controls.remove(updateNo);
        findLocation.data.set('content', "üö∂ –ù–∞–π—Ç–∏ –º–µ–Ω—è");
        findLocation.enable();
        findLocation.deselect();
        getCoords();
    });

    updateNo.events.add('click', function () {
        updateNo.select();
        myMap.controls.remove(updateYes);
        myMap.controls.remove(updateNo);
        findLocation.data.set('content', "üö∂ –ù–∞–π—Ç–∏ –º–µ–Ω—è");
        findLocation.enable();
        findLocation.deselect();
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞ –º–∞—Ä—à—Ä—É—Ç–∞
    closeRoute.events.add('click', function () {
        closeRoute.select();
        myMap.geoObjects.remove(currentRoute);
        control.routePanel.state.set({
            fromEnabled: false,
            from: '',
            to: ''
        });
        control.options.set({
            visible: false
        });
        localStorage.removeItem('routeEndPoint');
        closeRoute.options.set({
            visible: false
        });
    });

    // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ licalStaorage –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –∫–∞—Ä—Ç—É
    if (localStorage.getItem('userCoords')) {
        savedUserCoords = JSON.parse(localStorage.getItem('userCoords'));
        userCoordsPlacemark = new ymaps.Placemark(savedUserCoords, {
            iconContent: 'üö∂'
        }, {
            preset: 'islands#blueCircleIcon'
        });
        myMap.geoObjects.add(userCoordsPlacemark);
        myMap.setCenter(savedUserCoords);

        locationPlacemark = userCoordsPlacemark;
    } else {
        document.getElementById('routePlacemark').innerText = '–ù–∞–π—Ç–∏ –º–µ–Ω—è –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç';
    };

    // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–∫ –≤ licalStaorage –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –Ω–∞ –∫–∞—Ä—Ç—É
    if (localStorage.getItem('placemarks')) {
        var savedPlacemarks = JSON.parse(localStorage.getItem('placemarks'));

        savedPlacemarks.forEach((coords) => {
            //console.log(coords[0]);
            addPlacemark(coords[0], coords[1], coords[2], coords[3], coords[4]);
        });

        placemarks = savedPlacemarks;
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    myMap.events.add('contextmenu', function (e) {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–∏–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        var coords = e.get('pagePixels');

        if (placemarks.length == 0) {
            document.getElementById('deletePlacemark').style.display = 'none';
            document.getElementById('routePlacemark').style.display = 'none';
        } else {
            document.getElementById('deletePlacemark').style.display = 'block';
            document.getElementById('routePlacemark').style.display = 'block';
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
        var menu = document.getElementById('contextMenu');
        menu.style.left = coords[0] + 'px';
        menu.style.top = coords[1] + 'px';
        menu.style.display = 'block';

        localStorage.setItem('clickCoords', JSON.stringify(e.get('coords')));

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞
        e.preventDefault();
    });

    // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç—É
    myMap.events.add('click', function () {
        document.getElementById('contextMenu').style.display = 'none';
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
    document.getElementById('contextMenu').addEventListener('click', function (e) {
        if (e.target.tagName === 'DIV') {
            document.getElementById('contextMenu').style.display = 'none';

            clickCoords = JSON.parse(localStorage.getItem('clickCoords'));

            switch (e.target.textContent) {
                case '–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∫—É':
                    var id = Date.now();
                    addPlacemark(id, clickCoords, "–ó–∞–≥–æ–ª–æ–≤–æ–∫", "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "–¢–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è");

                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –º–∞—Å—Å–∏–≤
                    placemarks.push([id, clickCoords, "–ó–∞–≥–æ–ª–æ–≤–æ–∫", "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "–¢–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è"]);
                    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ localStorage
                    localStorage.setItem('placemarks', JSON.stringify(placemarks));
                    break;
                case '–£–¥–∞–ª–∏—Ç—å –º–µ—Ç–∫—É':
                    // –ò—â–µ–º –±–ª–∏–∂–∞–π—à—É—é –º–µ—Ç–∫—É
                    let nearestPlacemarkIndex = findNearestPlacemarkIndex(clickCoords);
                    //–ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω –∫ —É–¥–∞–ª—è–µ–º–æ–π –º–µ—Ç–∫–µ —É–¥–∞–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –∏ —Å–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
                    if (currentRoute) {
                        routeEndPoint = localStorage.getItem('routeEndPoint');

                        if (JSON.stringify(placemarks[nearestPlacemarkIndex][1]) === routeEndPoint) {
                            myMap.geoObjects.remove(currentRoute);
                            control.routePanel.state.set({
                                fromEnabled: false,
                                from: '',
                                to: ''
                            });
                            control.options.set({
                                visible: false
                            });
                            localStorage.removeItem('routeEndPoint');
                        }
                    }
                    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏
                    removePlacemarkByIndex(nearestPlacemarkIndex);
                    break;
                case '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç':
                    buildRoute(locationPlacemark, clickCoords);
                    break;
                case '–ù–∞–π—Ç–∏ –º–µ–Ω—è –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç':
                    getCoords().then(function () {
                        buildRoute(locationPlacemark, clickCoords);
                    });
                    break;
                case '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ':
                    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¢–µ—Å—Ç–æ–≤—ã –∫–ª—é—á API –Ø–Ω–¥–µ–∫—Å –ø–æ–≥–æ–¥—ã, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 30 –¥–Ω—è–º–∏
                    fetch(`http://217.18.62.180:3000/weather?lat=${clickCoords[0]}&lon=${clickCoords[1]}`)
                        .then(response => response.json())
                        .then(data => displayWeather(data))
                        .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
                    break;
            }
        }
    });
};


// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å HTML5
document.getElementById('checkCompatibility').addEventListener('click', function () {
    let result = '';
    if ('geolocation' in navigator) {
        document.getElementById('compatibilityResult').className = 'good-result';
        result += '–í–∞—à –±—Ä–∞—É–∑–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Geolocation API. ';
    } else {
        document.getElementById('compatibilityResult').className = 'bad-result';
        result += '–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Geolocation API. ';
    }

    document.getElementById('compatibilityResult').innerHTML = result;
});
